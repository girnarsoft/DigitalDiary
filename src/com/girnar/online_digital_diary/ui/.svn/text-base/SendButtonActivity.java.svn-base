package com.girnar.online_digital_diary.ui;

import com.girnar.online_digital_diary.database.DbHelper;
import com.girnar.online_digital_diary.interfaces.ImportantMethod;
import com.google.ads.Ad;
import com.google.ads.AdListener;
import com.google.ads.AdRequest;
import com.google.ads.AdSize;
import com.google.ads.AdView;
import com.google.ads.AdRequest.ErrorCode;
import com.google.analytics.tracking.android.EasyTracker;
import com.google.analytics.tracking.android.Tracker;

import android.os.Bundle;
import android.preference.PreferenceManager;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

/**
 * @author
 * 
 */
public class SendButtonActivity extends Activity implements ImportantMethod,
		OnClickListener {
	private ImageView friendinfo, accountinfo, otherinfo, home, back;
	private final String TAG = "SendAccountInfoActivity";
	private DbHelper db = new DbHelper(this);
	private Tracker tracker;

	@SuppressWarnings("deprecation")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Log.d(TAG, "on create called...");
		setContentView(R.layout.activity_send_button);
		EasyTracker.getInstance().setContext(getApplicationContext());
		tracker = EasyTracker.getTracker();
		tracker.trackView("List of Send Buttons");
		addGoogleAds();
		getIds();
		addListener();
		validate();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_send_button, menu);
		return true;
	}

	void addGoogleAds() {
		AdView adView = new AdView(this, AdSize.SMART_BANNER, getResources()
				.getString(R.string.google_ads_id));
		LinearLayout layout = (LinearLayout) findViewById(R.id.googleads);
		layout.addView(adView);
		AdRequest adRequest = new AdRequest();
		final LinearLayout pBar = (LinearLayout) findViewById(R.id.gooleaddload);
		pBar.setVisibility(View.VISIBLE);
		// adRequest.addTestDevice(AdRequest.TEST_EMULATOR);
		adView.setAdListener(new AdListener() {

			@Override
			public void onReceiveAd(Ad arg0) {
				pBar.setVisibility(View.GONE);
			}

			@Override
			public void onPresentScreen(Ad arg0) {
			}

			@Override
			public void onLeaveApplication(Ad arg0) {
			}

		
			@Override
			public void onDismissScreen(Ad arg0) {
				// TODO Auto-generated method stub

			}

			@Override
			public void onFailedToReceiveAd(Ad arg0, ErrorCode arg1) {
				// TODO Auto-generated method stub

			}
		});
		adView.loadAd(adRequest);

	}

	@Override
	public void getIds() {
		// TODO Auto-generated method stub
		friendinfo = (ImageView) findViewById(R.id.imageView_send_personal_info);
		setAccountinfo((ImageView) findViewById(R.id.imageView_send_other_info));
		setOtherinfo((ImageView) findViewById(R.id.imageView_send_bookmark));
		home = (ImageView) findViewById(R.id.imageview_home_bookmark);
		back = (ImageView) findViewById(R.id.imageview_back_bookmark);

	}

	@Override
	public void addListener() {
		// TODO Auto-generated method stub
		friendinfo.setOnClickListener(new OnClickListener() {

			public void onClick(View view) {
				db.open();
				SharedPreferences preferences = PreferenceManager
						.getDefaultSharedPreferences(getApplication());
				int id = preferences.getInt("id", 0);
				Cursor cursor = db.getInfoperson(id);
				System.out.println("method is empty");
				db.close();
				if (cursor.getCount() == 0) {
					// get your custom_toast.xml layout
					LayoutInflater inflater = getLayoutInflater();

					View layout = inflater
							.inflate(
									R.layout.custom_toast,
									(ViewGroup) findViewById(R.id.custom_toast_layout_id));

					// set a dummy image
					ImageView image = (ImageView) layout
							.findViewById(R.id.image);
					image.setImageResource(R.drawable.sendmail);

					// set a message
					TextView text = (TextView) layout.findViewById(R.id.text);
					text.setText("Friend info list is empty");

					// Toast...
					Toast toast = new Toast(getApplicationContext());
					toast.setGravity(Gravity.CENTER_VERTICAL, 0, 0);
					toast.setDuration(Toast.LENGTH_LONG);

					toast.setView(layout);
					toast.show();
				} else {
					Intent intent4 = new Intent(getApplicationContext(),
							SendListViewActivity.class);
					startActivity(intent4);
				}
			}
		});
		home.setOnClickListener(this);
		back.setOnClickListener(this);
		accountinfo.setOnClickListener(new OnClickListener() {

			public void onClick(View view) {
				db.open();
				SharedPreferences preferences = PreferenceManager
						.getDefaultSharedPreferences(getApplication());
				int id = preferences.getInt("id", 0);
				Cursor cursor = db.getInfoOther(id);
				
				db.close();
				if (cursor.getCount() == 0) {
					// get your custom_toast.xml layout
					LayoutInflater inflater = getLayoutInflater();

					View layout = inflater
							.inflate(
									R.layout.custom_toast,
									(ViewGroup) findViewById(R.id.custom_toast_layout_id));

					// set a dummy image
					ImageView image = (ImageView) layout
							.findViewById(R.id.image);
					image.setImageResource(R.drawable.sendmail);

					// set a message
					TextView text = (TextView) layout.findViewById(R.id.text);
					text.setText("Account info list is empty");

					// Toast...
					Toast toast = new Toast(getApplicationContext());
					toast.setGravity(Gravity.CENTER_VERTICAL, 0, 0);
					toast.setDuration(Toast.LENGTH_LONG);

					toast.setView(layout);
					toast.show();
				} else {
					Intent intent4 = new Intent(getApplicationContext(),
							SendAccountInfoActivity.class);
					startActivity(intent4);
				}
			}
		});
		otherinfo.setOnClickListener(new OnClickListener() {

			public void onClick(View view) {
				db.open();
				SharedPreferences preferences = PreferenceManager
						.getDefaultSharedPreferences(getApplication());
				int id = preferences.getInt("id", 0);
				Cursor cursor = db.getInfoBookmark(id);
				
				db.close();
				if (cursor.getCount() == 0) {
					// get your custom_toast.xml layout
					LayoutInflater inflater = getLayoutInflater();

					View layout = inflater
							.inflate(
									R.layout.custom_toast,
									(ViewGroup) findViewById(R.id.custom_toast_layout_id));

					// set a dummy image
					ImageView image = (ImageView) layout
							.findViewById(R.id.image);
					image.setImageResource(R.drawable.sendmail);

					// set a message
					TextView text = (TextView) layout.findViewById(R.id.text);
					text.setText("Other info list is empty");

					// Toast...
					Toast toast = new Toast(getApplicationContext());
					toast.setGravity(Gravity.CENTER_VERTICAL, 0, 0);
					toast.setDuration(Toast.LENGTH_LONG);

					toast.setView(layout);
					toast.show();
				} else {
					Intent intent4 = new Intent(getApplicationContext(),
							SendOtherInfoActivity.class);
					startActivity(intent4);
				}
			}
		});

	}

	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		super.onBackPressed();
		finish();
	}

	@Override
	public boolean validate() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		if (v == back) {

			finish();

		}
		if (v == home) {

			finish();

		}

	}

	/**
	 * @return account info;
	 */
	public ImageView getAccountinfo() {
		return accountinfo;
	}

	/**
	 * @param accountinfo
	 */
	public void setAccountinfo(ImageView accountinfo) {
		this.accountinfo = accountinfo;
	}

	/**
	 * @return other info;
	 */
	public ImageView getOtherinfo() {
		return otherinfo;
	}

	/**
	 * @param otherinfo
	 */
	public void setOtherinfo(ImageView otherinfo) {
		this.otherinfo = otherinfo;
	}

}
